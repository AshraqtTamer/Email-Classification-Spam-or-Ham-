{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyNzIwiVh/w2nvSf7rTmCj3Q"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.model_selection import train_test_split\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.feature_extraction.text import TfidfVectorizer"],"metadata":{"id":"8zAoSbBGsBBy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df=pd.read_csv('sms.csv',sep='\\t',names=['Status','Message'])\n"],"metadata":{"id":"4QQMNUJCqJeC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"rwpzuM5xqqpK","executionInfo":{"status":"ok","timestamp":1761048463093,"user_tz":-180,"elapsed":78,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"27d33a92-aa5e-46e2-9472-ad221ecb4ede"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Status                                            Message\n","0    ham  Go until jurong point, crazy.. Available only ...\n","1    ham                      Ok lar... Joking wif u oni...\n","2   spam  Free entry in 2 a wkly comp to win FA Cup fina...\n","3    ham  U dun say so early hor... U c already then say...\n","4    ham  Nah I don't think he goes to usf, he lives aro..."],"text/html":["\n","  <div id=\"df-cd126931-4442-4c0c-82f2-4b8ee04665aa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Status</th>\n","      <th>Message</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ham</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>spam</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ham</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd126931-4442-4c0c-82f2-4b8ee04665aa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cd126931-4442-4c0c-82f2-4b8ee04665aa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cd126931-4442-4c0c-82f2-4b8ee04665aa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-3e473807-6457-4403-a3be-dc3b530d7a17\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3e473807-6457-4403-a3be-dc3b530d7a17')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-3e473807-6457-4403-a3be-dc3b530d7a17 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5572,\n  \"fields\": [\n    {\n      \"column\": \"Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"spam\",\n          \"ham\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Message\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5169,\n        \"samples\": [\n          \"K, makes sense, btw carlos is being difficult so you guys are gonna smoke while I go pick up the second batch and get gas\",\n          \"URGENT! Your mobile No *********** WON a \\u00a32,000 Bonus Caller Prize on 02/06/03! This is the 2nd attempt to reach YOU! Call 09066362220 ASAP! BOX97N7QP, 150ppm\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["len(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y2L73fH4qwVy","executionInfo":{"status":"ok","timestamp":1761048474651,"user_tz":-180,"elapsed":44,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"e7e20eaf-7ce7-4c7c-eb98-361d95b7a835"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5572"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["len(df[df.Status=='spam'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XuMcUNIRqzJG","executionInfo":{"status":"ok","timestamp":1761048486876,"user_tz":-180,"elapsed":29,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"75bda3b1-1596-437b-9653-55dd30eb3f17"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["747"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["len(df[df.Status=='ham'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5PKGfp4zq2Ko","executionInfo":{"status":"ok","timestamp":1761048495775,"user_tz":-180,"elapsed":19,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"eeba4ede-18d9-4e59-de26-d35308e4ab35"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4825"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.loc[df[\"Status\"]=='ham',\"Status\"]=1\n","df.loc[df[\"Status\"]=='spam',\"Status\"]=0"],"metadata":{"id":"qClDrexmq4VW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"84DRXDNorBYC","executionInfo":{"status":"ok","timestamp":1761048540252,"user_tz":-180,"elapsed":60,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"bc5c32ab-3c78-48c1-ac9c-753226dd3fa5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Status                                            Message\n","0      1  Go until jurong point, crazy.. Available only ...\n","1      1                      Ok lar... Joking wif u oni...\n","2      0  Free entry in 2 a wkly comp to win FA Cup fina...\n","3      1  U dun say so early hor... U c already then say...\n","4      1  Nah I don't think he goes to usf, he lives aro..."],"text/html":["\n","  <div id=\"df-ae08517f-8bc1-4c13-a266-774b3fa6b82e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Status</th>\n","      <th>Message</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae08517f-8bc1-4c13-a266-774b3fa6b82e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ae08517f-8bc1-4c13-a266-774b3fa6b82e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ae08517f-8bc1-4c13-a266-774b3fa6b82e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c0c2c5e2-a1ed-406b-8998-c649b7bfb47f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c0c2c5e2-a1ed-406b-8998-c649b7bfb47f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c0c2c5e2-a1ed-406b-8998-c649b7bfb47f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5572,\n  \"fields\": [\n    {\n      \"column\": \"Status\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Message\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5169,\n        \"samples\": [\n          \"K, makes sense, btw carlos is being difficult so you guys are gonna smoke while I go pick up the second batch and get gas\",\n          \"URGENT! Your mobile No *********** WON a \\u00a32,000 Bonus Caller Prize on 02/06/03! This is the 2nd attempt to reach YOU! Call 09066362220 ASAP! BOX97N7QP, 150ppm\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df_x=df[\"Message\"]\n","df_y=df[\"Status\"]"],"metadata":{"id":"zeFD0DA0rDLe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train, x_test, y_train, y_test = train_test_split(df_x, df_y, test_size=0.2, random_state=4)"],"metadata":{"id":"qzZU0zpZrNdC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cv=TfidfVectorizer(min_df=1,stop_words='english')\n","x_traincv=cv.fit_transform(x_train)\n","a=x_traincv.toarray()\n","a[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FVsbJGCNr88u","executionInfo":{"status":"ok","timestamp":1761048899295,"user_tz":-180,"elapsed":185,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"0e3f6372-7903-4bc5-c933-885f28f81252"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0., 0., 0., ..., 0., 0., 0.])"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["x_testcv=cv.transform(x_test)\n","x_testcv.toarray()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MSqsRkqXsazn","executionInfo":{"status":"ok","timestamp":1761048920277,"user_tz":-180,"elapsed":28,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"721d25ad-7d05-4b58-e01a-fbdaf9f64e71"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.],\n","       ...,\n","       [0., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.]])"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["mnb=MultinomialNB()\n","y_train=y_train.astype('int')\n","mnb.fit(x_traincv,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"KpWyWRPssezd","executionInfo":{"status":"ok","timestamp":1761048970540,"user_tz":-180,"elapsed":104,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"f3b41ab8-0762-4f60-b58e-7c097509b1a4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MultinomialNB()"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MultinomialNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>MultinomialNB</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.naive_bayes.MultinomialNB.html\">?<span>Documentation for MultinomialNB</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>MultinomialNB()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["prediction=mnb.predict(x_testcv)"],"metadata":{"id":"IfWLg-oCssOU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZM9jyz3xsvvN","executionInfo":{"status":"ok","timestamp":1761048990749,"user_tz":-180,"elapsed":35,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"95e2788c-dfda-4451-8211-49f47ef8d8d0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, ..., 1, 1, 0])"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["testmessage=x_test.iloc[0]\n","testmessage"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"id":"XAWtn4OnsxLg","executionInfo":{"status":"ok","timestamp":1761049189321,"user_tz":-180,"elapsed":44,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"6ce94e4b-01a1-41f0-8a78-bfda95000a53"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'somewhere out there beneath the pale moon light someone think in of u some where out there where dreams come true... goodnite &amp; sweet dreams'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["a=np.array(y_test)\n","a = a.astype('int') # Convert to integer type"],"metadata":{"id":"GvfSzI12thqB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["count=0\n","for i in range (len(prediction)):\n","    if prediction[i]==a[i]:\n","        count=count+1\n"],"metadata":{"id":"OJa5KAOZt-0B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["count"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dzD5RsU6uXRZ","executionInfo":{"status":"ok","timestamp":1761049420938,"user_tz":-180,"elapsed":26,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"2b97aade-bb5d-46c5-c7e9-733eab208ad9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1068"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["len(prediction)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VdltY_JwuaNB","executionInfo":{"status":"ok","timestamp":1761049469664,"user_tz":-180,"elapsed":18,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"661d5a74-ce10-4013-f2a2-013a750c3039"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1115"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["accuracy = count / len(prediction)\n","print(f\"Accuracy: {accuracy}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CJhZC8SUumEH","executionInfo":{"status":"ok","timestamp":1761049510078,"user_tz":-180,"elapsed":37,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"7d593f4a-3c5e-4951-98d1-a9fb129ac586"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.957847533632287\n"]}]},{"cell_type":"code","metadata":{"id":"6b91daca"},"source":["from sklearn.metrics import classification_report, confusion_matrix"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"72db27f3","executionInfo":{"status":"ok","timestamp":1761049625030,"user_tz":-180,"elapsed":29,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"f3f38314-8af7-4675-b5e7-bfc07ba2bd86"},"source":["print(classification_report(a, prediction))\n","print(confusion_matrix(a, prediction))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.99      0.73      0.84       168\n","           1       0.95      1.00      0.98       947\n","\n","    accuracy                           0.96      1115\n","   macro avg       0.97      0.86      0.91      1115\n","weighted avg       0.96      0.96      0.96      1115\n","\n","[[122  46]\n"," [  1 946]]\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","cm = confusion_matrix(a, prediction)\n","plt.figure(figsize=(6, 4))\n","sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Spam', 'Ham'], yticklabels=['Spam', 'Ham'])\n","plt.xlabel('Predicted')\n","plt.ylabel('Actual')\n","plt.title('Confusion Matrix')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":410},"id":"B0queiS2vRNr","executionInfo":{"status":"ok","timestamp":1761049664635,"user_tz":-180,"elapsed":839,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"a2da4a79-424d-41c8-d954-f89d6182f4ed"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"9d3aec86"},"source":["## Create a directory for the streamlit application\n","\n","### Subtask:\n","Create a new directory to store the Streamlit application script.\n"]},{"cell_type":"markdown","metadata":{"id":"41da7488"},"source":["**Reasoning**:\n","Create a new directory named `spam_detector_app` to store the Streamlit application script and verify its creation.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"859c4c22","executionInfo":{"status":"ok","timestamp":1761050352172,"user_tz":-180,"elapsed":31,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"b804d84e-c2f8-4a27-cc53-5d3fdffccc70"},"source":["import os\n","\n","# Define the directory name\n","app_dir = 'spam_detector_app'\n","\n","# Create the directory\n","os.makedirs(app_dir, exist_ok=True)\n","\n","# Verify that the directory has been created\n","if os.path.exists(app_dir) and os.path.isdir(app_dir):\n","    print(f\"Directory '{app_dir}' created successfully.\")\n","else:\n","    print(f\"Failed to create directory '{app_dir}'.\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Directory 'spam_detector_app' created successfully.\n"]}]},{"cell_type":"markdown","metadata":{"id":"0b37df5f"},"source":["## Create a streamlit application script\n","\n","### Subtask:\n","Write a Python script that loads the model and vectorizer, creates a text input field for the user to enter a message, and displays the prediction (Spam or Ham) when the user submits the message. Save this script in the newly created directory.\n"]},{"cell_type":"markdown","metadata":{"id":"74e318f4"},"source":["**Reasoning**:\n","Write the Python script for the Streamlit application, including loading the model and vectorizer, creating input fields, and displaying predictions.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"127d569c","executionInfo":{"status":"ok","timestamp":1761050373063,"user_tz":-180,"elapsed":114,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"be256a2b-c8de-45dd-e13e-65e60f4e6695"},"source":["%%writefile spam_detector_app/app.py\n","import streamlit as st\n","import pickle\n","import os\n","\n","# Get the directory of the current script\n","script_dir = os.path.dirname(__file__)\n","# Construct the absolute paths to the pickle files\n","vectorizer_path = os.path.join(script_dir, '../vectorizer.pkl')\n","model_path = os.path.join(script_dir, '../spam_model.pkl')\n","\n","# Load the saved vectorizer and model\n","with open(vectorizer_path, 'rb') as vectorizer_file:\n","    cv = pickle.load(vectorizer_file)\n","\n","with open(model_path, 'rb') as model_file:\n","    mnb = pickle.load(model_file)\n","\n","# Create a Streamlit title\n","st.title('SMS Spam Detection')\n","\n","# Add a text input area\n","user_input = st.text_area(\"Enter an SMS message:\")\n","\n","# Add a button to submit the message\n","if st.button(\"Predict\"):\n","    if user_input:\n","        # Transform the user's input message\n","        user_input_transformed = cv.transform([user_input])\n","\n","        # Make a prediction\n","        prediction = mnb.predict(user_input_transformed)\n","\n","        # Display the prediction\n","        if prediction[0] == 1:\n","            st.write(\"Prediction: Ham\")\n","        else:\n","            st.write(\"Prediction: Spam\")\n","    else:\n","        st.write(\"Please enter a message to predict.\")\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Writing spam_detector_app/app.py\n"]}]},{"cell_type":"markdown","metadata":{"id":"bffd0a0d"},"source":["## Run the streamlit application\n","\n","### Subtask:\n","Provide instructions on how to run the Streamlit script from the command line, making sure to navigate to the directory where the script is saved.\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4e9806e8","executionInfo":{"status":"ok","timestamp":1761051264733,"user_tz":-180,"elapsed":19,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"1d475735-9e21-4cfc-95b6-e56c8ed3082a"},"source":["# Example custom message\n","custom_message = \"Congratulations! You've won a free prize. Click here to claim.\"\n","\n","# Transform the custom message using the fitted vectorizer\n","custom_message_transformed = cv.transform([custom_message])\n","\n","# Make a prediction using the trained model\n","prediction = mnb.predict(custom_message_transformed)\n","\n","# Display the prediction\n","if prediction[0] == 1:\n","    print(\"The message is predicted as: Ham\")\n","else:\n","    print(\"The message is predicted as: Spam\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The message is predicted as: Spam\n"]}]},{"cell_type":"code","metadata":{"id":"e15b6ca7"},"source":["df['Message_Length'] = df['Message'].apply(len)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"62c9905d","executionInfo":{"status":"ok","timestamp":1761051104641,"user_tz":-180,"elapsed":734,"user":{"displayName":"Ashrakat Tamer","userId":"13077231385652285411"}},"outputId":"17872970-6e99-4ee4-b695-fb01615e1b6a"},"source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","plt.figure(figsize=(12, 6))\n","sns.histplot(data=df, x='Message_Length', hue='Status', kde=True)\n","plt.title('Distribution of Message Lengths by Status')\n","plt.xlabel('Message Length')\n","plt.ylabel('Frequency')\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}